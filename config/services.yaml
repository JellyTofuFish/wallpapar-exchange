# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    comment_controller:
        class: App\Controller\CommentController

    app.service.file_mover:
        class: App\Service\FileMover
        arguments:
            - "@filesystem"
    app.service.picture_file_path_helper:
        class: App\Service\PictureFilePathHelper
        arguments:
            - "%kernel.project_dir%/public/images/"

    app.service.picture_file_deleter:
        class: App\Service\PictureFileDeleter
        arguments:
            - "@filesystem"
            - "%kernel.project_dir%/public/images/"

    app.doctrine_event_listener.picture_upload_listener:
        class: App\Event\Listener\pictureUploadListener
        arguments:
            - "@app.service.file_mover"
            - "@app.service.picture_file_path_helper"
            - "@security.helper"
            - "@app.service.picture_file_deleter"
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    app.doctrine_event_listener.comment__listener:
        class: App\Event\Listener\commentListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }


    app.form.type.custom_file_type:
        class: App\Form\DataTransformer\FileTransformer
        tags:
            - { name: form.type, alias: custom_file_type }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
knp_paginator:
    page_range: 4                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query parameter name
    template:
        pagination: '@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig'     # sliding pagination controls template